"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
"  .bashrc -- my personal VIM configuration
"             see https://github.com/hcartiaux/dotfiles
"
"  Copyright (c) 2013 Hyacinthe Cartiaux <Hyacinthe.Cartiaux@uni.lu>
"                                _
"                         __   _(_)_ __ ___  _ __ ___
"                         \ \ / / | '_ ` _ \| '__/ __|
"                          \ V /| | | | | | | | | (__
"                         (_)_/ |_|_| |_| |_|_|  \___|
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Resources:
" * https://github.com/shingara/vim-conf/blob/master/vimrc
" * http://blog.shingara.fr/vundle-ou-le-bundler-de-vim.html
" * http://vim.wikia.com/wiki/Configuring_the_cursor
" * http://ftp.vim.org/pub/vim/runtime/spell/
" * http://stackoverflow.com/questions/6496778/vim-run-autocmd-on-all-filetypes-except
" * http://vim.wikia.com/wiki/Omni_completion

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Git syntax highlighting and integration
Bundle 'tpope/vim-git'
Bundle 'tpope/vim-fugitive'
Bundle 'gregsexton/gitv'
" syntax highlighting
Bundle 'tpope/vim-markdown'
Bundle 'vim-ruby/vim-ruby'
" Surround selection with quotes, parenthesis…
Bundle 'tpope/vim-surround'
" Automatically closes functions, blocks, etc.
Bundle 'tpope/vim-endwise'
" A better stats bar
Bundle 'Lokaltog/vim-powerline'
" Aligns text.
Bundle 'godlygeek/tabular'
" Browse tags of source code files.
Bundle 'majutsushi/tagbar'

syntax on
set background=dark
colorscheme default
filetype on

" set mouse=a
" set number
set ruler
set nocompatible
set hlsearch
set nostartofline
set scrolloff=1
set nostartofline
set laststatus=2
set showcmd
set showmatch

set cursorline
hi CursorLine term=bold cterm=bold ctermbg=blue ctermfg=white

" orange in insert mode, red in command mode
" if you want to use rgb color formatting:
"   konsoleprofile CustomCursorColor=#255255255
autocmd VimEnter * silent !konsoleprofile UseCustomCursorColor=1
let &t_SI = "\<Esc>]50;CustomCursorColor=orange;BlinkingCursorEnabled=1\x7"
let &t_EI = "\<Esc>]50;CustomCursorColor=red;BlinkingCursorEnabled=0\x7"
silent !konsoleprofile CustomCursorColor=red
autocmd VimLeave * silent !konsoleprofile CustomCursorColor=gray;BlinkingCursorEnabled=0


" Indent
set cindent
set softtabstop=2
set tabstop=2
set expandtab
set shiftwidth=2

" set textwidth=80

" Encoding
set encoding=utf-8
set fileencoding=utf-8


" filename completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc

let g:qb_hotkey = "<F1>"

" Centralize backups, swapfiles and undo history
set backup
set backupdir=$HOME/.vim/backup
set directory=$HOME/.vim/swap
if exists("&undodir")
    set undodir=$HOME/.vim/undo
endif
set viminfo+=n$HOME/.vim/.viminfo

" Vim 7 spell checker (z=)
if has("spell")
  setlocal spell spelllang=
  " Language : FR
  map ,lf :setlocal spell spelllang=fr<cr>
  " Language : EN
  map ,le :setlocal spell spelllang=en<cr>
  " Language : Aucun
  map ,ln :setlocal spell spelllang=<cr>
endif


set spellsuggest=5
autocmd BufEnter *.txt,*.tex,*.md set spell
autocmd BufEnter *.txt,*.tex set spelllang=fr
autocmd BufEnter *.md set spelllang=en
autocmd BufNewFile,BufRead PKGBUILD set syntax=sh

autocmd bufnewfile *.rb so ~/.vim/header/ruby
autocmd bufnewfile *.pl so ~/.vim/header/perl
autocmd bufnewfile *.sh so ~/.vim/header/shell
au BufRead,BufNewFile *.md set syntax=markdown

" Display trailing white spaces
set list listchars=tab:\ \ ,trail:·
" Remove trailing white spaces in all files except *.md
fun! StripTrailingWhitespace()
    " Only strip if the b:noStripeWhitespace variable isn't set
    if exists('b:noStripWhitespace')
        return
    endif
    %s/\s\+$//e
endfun
autocmd BufWritePre * call StripTrailingWhitespace()
autocmd FileType markdown let b:noStripWhitespace=1

" Completion, C-X C-O in insert mode, navigation with C-N/C-P
filetype plugin on
set ofu=syntaxcomplete#Complete

map <F3> <Esc>:tabnext<CR>
map <F2> <Esc>:tabprevious<CR>
map <F6> <Esc>:set paste<CR>
